package api.test;import api.endpoint.EndpointForm;import api.endpoint.RouterBookingCare;import api.ultis.ApiWardInfor;import api.ultis.DataUltils;import api.ultis.SlackNotificationUltis;import com.google.gson.JsonArray;import com.google.gson.JsonElement;import com.google.gson.JsonObject;import com.google.gson.JsonParser;import io.restassured.RestAssured;import io.restassured.response.Response;import java.util.Iterator;import org.testng.annotations.Test;public class LocationWardTest {    private static int countNumberPhuongXa(JsonArray array, String key) {        int count = 0;        Iterator check = array.iterator();        while (check.hasNext()) {            JsonElement element = (JsonElement) check.next();            JsonObject object = element.getAsJsonObject();            if (object.has(key)) {                ++count;            }        }        return count;    }    @Test(description = "API Phường Xã: Kiểm tra dữ liệu trả về đầy đủ với mã quận huyện =5")    private static void checkCountPhuongXa() {        String maQuanCauGiay = "5";        Response response = EndpointForm.listPhuongXa(maQuanCauGiay);        JsonObject jsonObject = JsonParser.parseString(response.asString()).getAsJsonObject();        JsonArray dulieuArray = jsonObject.getAsJsonArray("dulieu");        int countPhuongXa = countNumberPhuongXa(dulieuArray, "ma");        if (countPhuongXa != 8) {            SlackNotificationUltis.sendSlackNotification("ERROR APIPhuongXa không trả về đủ dữ liệu với maQuanHuyen " + maQuanCauGiay);        }    }    public static void main(String[] args) {        checkDataRadom();    }    @Test(description = "API Phường Xã: Kiểm tra dữ liệu trả về đầy đủ với mã quận huyện random")    private static void checkDataRadom() {        String maQuanHuyen = DataUltils.getDataQuanHuyenNoValue();        Response response = EndpointForm.listPhuongXa(maQuanHuyen);        JsonObject jsonObject = JsonParser.parseString(response.asString()).getAsJsonObject();        JsonArray dulieuArray = jsonObject.getAsJsonArray("dulieu");        if (dulieuArray.isEmpty()) {            SlackNotificationUltis.sendSlackNotification("ERROR APIPhuongXa không trả về dữ  với maQuanHuyen= " + maQuanHuyen);        }    }    @Test(description = "API Phường Xã: Kiểm tra dữ liệu trả về đúng kết quả mong muốn với maQuanHuyen =5")    private static void checkReturnValue() {        RestAssured.baseURI = RouterBookingCare.BASE_URL;        String endpoint = RouterBookingCare.ENPOINT_PHUONGXA_ENDPOINT;        String maQuanHuyen = "5";        ApiWardInfor adressInfor = new ApiWardInfor(RestAssured.baseURI, maQuanHuyen, endpoint);        String ten = adressInfor.getDuLieuMa("Phường Dịch Vọng");        if (!"166".equals(ten)) {            SlackNotificationUltis.sendSlackNotification("ERROR MaPhuongXa khong tra maQuanHuyen= " + maQuanHuyen);        }    }}