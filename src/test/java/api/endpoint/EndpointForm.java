package api.endpoint;import static io.restassured.RestAssured.given;import api.ultis.StatusCodeApi;import io.restassured.http.ContentType;import io.restassured.response.Response;import org.testng.Assert;public class EndpointForm {  static int MA_CK = 1;  public static Response listTinhThanh() {    Response response = given()        .contentType(ContentType.JSON)        .when()        .get(RouterBookingCare.TINHTHANH_URL);    return response;  }  public static Response listQuanHuyen(String ma) {    Response response = given()        .contentType(ContentType.JSON)        .pathParam("ma", ma)        .queryParam("dt", 461)        .when()        .get(RouterBookingCare.QUANHUYEN_URL);    return response;  }  public static Response listPhuongXa(String maQuanHuyen) {    Response response = given()        .contentType(ContentType.JSON)        .pathParams("ma", maQuanHuyen)        .queryParam("dt", 461)        .when().get(RouterBookingCare.PHUONGXA_URL);    return response;  }  public static Response informationHomePage() {    Response response = given()        .contentType(ContentType.JSON)        .when()        .get(RouterBookingCare.HOME_PAGE_URL);    return response;  }  public static Response informationDoctor(String ma) {    Response response = given()        .baseUri(RouterBookingCare.BASE_URL)        .basePath(RouterBookingCare.INFOR_DOCTOR_URL)        .queryParam("ma", ma)        .queryParam("lk", false)        .when()        .get();    Assert.assertEquals(response.getStatusCode(), StatusCodeApi.OK);    Assert.assertEquals(response.getContentType(), "application/json");    return response;  }  public static Response scheduleWeb(String ma) {    Response response = given()        .pathParam("ma", ma)        .when()        .get(RouterBookingCare.SCHEDULE_WEB_URL);    return response;  }  public static Response informationScheduleDoctor(String ma) {    Response response = given()        .pathParam("ma", ma)        .when()        .get(RouterBookingCare.SCHEDULES_DOCTOR_URL);    Assert.assertEquals(response.getStatusCode(), StatusCodeApi.OK);    Assert.assertEquals(response.getContentType(), "application/json");    return response;  }  public static Response informationSchedule(String t, String ma, String nk) {    Response response = given()        .pathParam("thu", t)        .queryParam("lichkham_ma", ma)        .queryParam("noikham_ma", nk)        .when()        .get(RouterBookingCare.INFOR_SCHEDULE_DOCTOR);    return response;  }  public static Response informationChuyenKhoa(int maCK) {    Response response = given()        .baseUri(RouterBookingCare.BASE_URL)        .basePath(RouterBookingCare.SCHEDULE_URL)        .queryParam("ma", maCK)        .contentType(ContentType.JSON)        .when()        .get();    return response;  }  public static Response informationChuyenKhoaSearchWithProvince(Integer maTinhThanh) {    Response response = given()        .baseUri(RouterBookingCare.BASE_URL)        .basePath(RouterBookingCare.SCHEDULE_URL)        .queryParam("ma", MA_CK)        .queryParams("tinhthanh", maTinhThanh)        .contentType(ContentType.JSON)        .when()        .get();    return response;  }  public static Response informationChuyenKhoaSearchWithProvince(Integer maTinhThanh,      Integer maQuanHuyen) {    Response response = given()        .baseUri(RouterBookingCare.BASE_URL)        .basePath(RouterBookingCare.SCHEDULE_URL)        .queryParam("ma", MA_CK)        .queryParams("tinhthanh", maTinhThanh)        .queryParams("quanhuyen", maQuanHuyen)        .contentType(ContentType.JSON)        .when()        .get();    return response;  }  public static Response getObjectSpecialist() {    Response response = given()        .baseUri(RouterBookingCare.BASE_URL)        .basePath(RouterBookingCare.SCHEDULE_URL)        .queryParam("ma", MA_CK)        .contentType(ContentType.JSON)        .when()        .get();    return response;  }  public static Response getObjectClinicPlace() {    Response response = given()        .baseUri(RouterBookingCare.BASE_API_URL)        .basePath(RouterBookingCare.CLINIC_PLACE_URL)        .contentType(ContentType.JSON)        .when()        .get();    return response;  }  public static Response getObjectDetailClinicPlace(String ma) {    Response response = given()        .baseUri(RouterBookingCare.BASE_API_URL)        .basePath(RouterBookingCare.CLINIC_PLACE_URL + "/" + ma)        .queryParam("detail", true)        .contentType(ContentType.JSON)        .when()        .get();    return response;  }  public static Response getObjecResultTypeDoctor(String key) {    Response response = given()        .baseUri(RouterBookingCare.BASE_URL)        .basePath(RouterBookingCare.FILTER)        .queryParam("tukhoa", key)        .queryParam("loai", "bac_si")        .contentType(ContentType.JSON)        .when()        .get();    Assert.assertEquals(response.getStatusCode(), StatusCodeApi.OK);    Assert.assertEquals(response.getContentType(), "application/json");    return response;  }  public static Response getObjecResultTypeClinicPlace(String key) {    Response response = given()        .baseUri(RouterBookingCare.BASE_URL)        .basePath(RouterBookingCare.FILTER)        .queryParam("tukhoa", key)        .queryParam("loai", "co_so_y_te")        .contentType(ContentType.JSON)        .when()        .get();    Assert.assertEquals(response.getStatusCode(), StatusCodeApi.OK);    Assert.assertEquals(response.getContentType(), "application/json");    return response;  }}